<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.caloriecounter.feed.mapper.FeedMapper">

    <insert id="write" parameterType="com.example.caloriecounter.feed.controller.dto.request.FeedDto">
        INSERT INTO feed(contents, user_id)
        values (#{contents}, #{userId})
        <selectKey keyColumn="FEED_ID" keyProperty="id" resultType="long" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <select id="findByFeedId" parameterType="long" resultType="com.example.caloriecounter.feed.domain.Feed">
        select FEED_ID, CONTENTS, USER_ID
        from FEED
        where FEED_ID = #{feedId}
    </select>

    <select id="isExistId" resultType="boolean">
        SELECT EXISTS(select user_Id from USER_TABLE where user_Id = #{userId})
    </select>

    <select id="maxCursor" resultType="Long">
        select Max(FEED_ID)
        from FEED;
    </select>

    <select id="getFeedList" resultType="com.example.caloriecounter.feed.controller.dto.request.FeedListDto">
        select f.feed_id,
               f.contents,
               f.writeDate,
               u.ID
        from FEED as f
                 inner join user_table u on u.id = f.user_id

        where f.feed_id &lt;= #{paging.cursorNo}
        order by f.feed_id desc
        limit #{paging.displayPerPage};
    </select>

    <update id="update">
        update feed
        set contents = #{contents}
        where feed_id = #{feedId}
    </update>

    <delete id="delete" parameterType="long">
        delete
        from FEED
        where FEED_ID = #{feedId};
    </delete>

    <delete id="deleteAll">
        truncate table FEED;
    </delete>
</mapper>